尚硅谷Mysql核心技术的视频学习相关记录：

-3月24学习：
*****start*********
-- select * from employees
--
-- 查询常量值
SELECT
	100 AS num;-- 查询表达式：
SELECT
	100 % 98;-- 查询函数：
SELECT
	VERSION( );-- 起别名：
SELECT
	100 % 98 AS result;
SELECT
	last_name AS 姓,
	first_name AS 名
FROM
	employees;-- 方式2：
SELECT
	last_name 姓,
	first_name 名
FROM
	employees;-- 查询sakary，显示out put,双引号的使用
SELECT
	salary AS "out put"
FROM
	employees;-- 去重：
--
-- 查询员工所在部门编号：
SELECT DISTINCT
	( department_id )
FROM
	employees;-- 9.+号作用
/**

java中的+号：
1.运算符：两个操作数都为数值型；
2.连接符：只要有一个操作数为字符串

mysql中的+号：
仅仅只有一个功能：运算符

select 100+90;  两个操作数都是数值型，做加法运算
SELECT '123'+90  ;其中一方位字符型，试图将字符型的数值转换为数值型，如果转换成功，则继续做加法运算

SELECT 'john'+90;   如果转换失败，则将字符型数值转换为0

SELECT null+0;    一方为null，结果为null
*/--
-- 查询员工名和姓链接成一个字段，并显示为姓名
SELECT
	last_name + first_name AS 姓名
FROM
	employees;-- 连接字符函数
-- CONCAT(str1,str2,...)
SELECT
	CONCAT( last_name, first_name ) 姓名
FROM
	employees;

*****end*********


3月25日学习：
-- 1. 下面的语句是否可以执行成功
select last_name , job_id , salary as sal
from employees;
-- 2. 下面的语句是否可以执行成功
select * from employees;
-- 3. 找出下面语句中的错误
select employee_id , last_name，
salary * 12 “ANNUAL SALARY”
from employees;

select employee_id , last_name,
salary * 12 "ANNUAL SALARY"
from employees;
-- 4. 显示表 departments 的结构，并查询其中的全部数据

DESC departments;
SELECT * FROM departments;

-- 5. 显示出表 employees 中的全部 job_id（不能重复）

SELECT DISTINCT job_id from employees;
-- 6. 显示出表 employees 的全部列，各个列之间用逗号连接，列头显示成 OUT_PUT


SELECT IFNULL(commission_pct,0) AS 结果,commission_pct from employees;

SELECT CONCAT(first_name,',',last_name,',',job_id,',',IFNULL(commission_pct,0)) AS OUT_PUT FROM employees;


进阶二：

条件查询：

/**
语法：select 查询列表 from 表名  where   筛选条件；

分类：
  1.按条件表达式筛选：
			条件运算符； > < = !=  <>
	2.按逻辑表达式查询：
	逻辑运算符： && || !
							and  or  not

							&& 和and  两个条件都为true,结果为true,反之为false;
							|| 和 or  只要有一个条件为true 结果为true,反之为false;
							! 或 not 如果链接的两个条件本身为false,结果为true,反之为false;
	3.模糊查询：
			LIKE
			BETWEEN AND
			IN
			IS NULL

*/


1.按条件表达式筛选

#案例1：查询工资 > 12000的员工信息

SELECT * FROM employees where salary > 12000;


#案例2:查询部门编号部位90的员工名和部门编号

SELECT last_name,department_id from employees WHERE department_id != 90;


2.按逻辑表达式筛选

#案例一：查询工资在10000到20000之间的员工名，工资和奖金
SELECT
	last_name,
	salary,
	commission_pct
FROM
	employees
WHERE
	salary >= 10000
	AND salary <= 20000;


#案例二：查询部门编号不是在90 到110之间，或者工资高于15000的员工信息

SELECT * FROM employees WHERE department_id < 90 OR department_id > 110 OR salary > 15000;


#三。模糊查询：

/***
LIKE
特点：
1.一般和通配符搭配使用：
			通配符：
			%  任意多个字符 ，包含0个字符
			_ 任意单个字符
			BETWEEN AND
			IN
			IS NULL*/

#案例1：查询员工名中包含a的员工信息

SELECT * FROM employees WHERE last_name LIKE '%a%';

#查询员工名中第三个字符为e,第五个字符为a的员工名和工资：

SELECT last_name,salary FROM employees WHERE last_name LIKE '__n_a%';

#案例3：查询员工名中第二个字符为_的员工名(转义字符的使用)

SELECT last_name FROM employees where last_name LIKE '_\_%';

<转义字符的使用>
SELECT last_name FROM employees where last_name LIKE '_$_%' ESCAPE '$';

***** end *******
